#!/bin/bash

echo "üîÑ Restaurando Configura√ß√£o e Corrigindo Autentica√ß√£o"
echo "===================================================="

PROJECT_ID="stable-chain-455617-v1"
GCLOUD_CONFIG_DIR="/root/.config/gcloud"
VOLUME_CONFIG_DIR="/app/gcloud-config"

echo "üìã Verificando configura√ß√£o salva no volume..."

# Verificar se h√° configura√ß√£o salva no volume
if [ -f "$VOLUME_CONFIG_DIR/application_default_credentials.json" ]; then
    echo "‚úÖ Credenciais encontradas no volume!"
    
    # Restaurar do volume
    echo "üì• Restaurando configura√ß√£o do volume..."
    mkdir -p "$GCLOUD_CONFIG_DIR"
    cp -r "$VOLUME_CONFIG_DIR"/* "$GCLOUD_CONFIG_DIR/" 2>/dev/null || true
    
    # Configurar projeto
    echo "üéØ Configurando projeto..."
    gcloud config set project $PROJECT_ID 2>/dev/null || true
    
    # Remover impersona√ß√£o (usar credenciais diretas)
    echo "üîß Configurando para usar credenciais diretas..."
    gcloud config unset auth/impersonate_service_account 2>/dev/null || true
    
    # Configurar vari√°veis de ambiente
    export GOOGLE_APPLICATION_CREDENTIALS="$GCLOUD_CONFIG_DIR/application_default_credentials.json"
    export GOOGLE_CLOUD_PROJECT="$PROJECT_ID"
    
    echo ""
    echo "üß™ Testando configura√ß√£o restaurada..."
    python test_api_working.py
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "üéâ SUCESSO! Configura√ß√£o restaurada e funcionando!"
        echo "================================================"
        echo ""
        echo "‚úÖ Credenciais restauradas do volume"
        echo "‚úÖ Google Cloud Vision API funcionando"
        echo "‚úÖ Sem necessidade de reautentica√ß√£o"
        echo ""
        echo "üöÄ Agora voc√™ pode executar:"
        echo "   python main.py"
        echo ""
        
        # Criar script de ativa√ß√£o r√°pida
        cat > /app/quick_activate.sh << 'EOF'
#!/bin/bash
# Ativa√ß√£o r√°pida das credenciais

PROJECT_ID="stable-chain-455617-v1"

# Restaurar configura√ß√£o
if [ -d "/app/gcloud-config" ]; then
    cp -r /app/gcloud-config/* /root/.config/gcloud/ 2>/dev/null || true
fi

# Configurar projeto
gcloud config set project $PROJECT_ID 2>/dev/null || true

# Remover impersona√ß√£o
gcloud config unset auth/impersonate_service_account 2>/dev/null || true

# Vari√°veis de ambiente
export GOOGLE_APPLICATION_CREDENTIALS="/root/.config/gcloud/application_default_credentials.json"
export GOOGLE_CLOUD_PROJECT="$PROJECT_ID"

echo "‚úÖ Credenciais ativadas! Execute: python main.py"
EOF
        
        chmod +x /app/quick_activate.sh
        
        # Adicionar ao bashrc
        if ! grep -q "source /app/quick_activate.sh" ~/.bashrc 2>/dev/null; then
            echo "source /app/quick_activate.sh" >> ~/.bashrc
            echo "‚úÖ Ativa√ß√£o autom√°tica configurada para futuras sess√µes"
        fi
        
        exit 0
    else
        echo ""
        echo "‚ö†Ô∏è Credenciais restauradas mas h√° problemas de API/permiss√µes"
        echo "üí° Vamos tentar reautenticar..."
    fi
else
    echo "‚ùå Nenhuma configura√ß√£o encontrada no volume"
    echo "üí° Voc√™ precisa configurar pela primeira vez"
fi

echo ""
echo "üîê Reautentica√ß√£o necess√°ria..."
echo "Execute os seguintes comandos:"
echo ""
echo "1. Autenticar no gcloud:"
echo "   gcloud auth login --no-launch-browser"
echo ""
echo "2. Depois escolha uma op√ß√£o:"
echo "   a) Solu√ß√£o simples: ./quick_fix_working.sh"
echo "   b) Solu√ß√£o avan√ßada: ./complete_impersonation_setup.sh"
echo ""
echo "üìã Status atual:"
echo "   Projeto: $(gcloud config get-value project 2>/dev/null || echo 'N√ÉO CONFIGURADO')"
echo "   Conta: $(gcloud config get-value account 2>/dev/null || echo 'N√ÉO AUTENTICADO')"
echo "   Credenciais ADC: $([ -f "$GCLOUD_CONFIG_DIR/application_default_credentials.json" ] && echo 'EXISTEM' || echo 'N√ÉO EXISTEM')" 