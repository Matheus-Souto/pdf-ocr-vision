#!/bin/bash

echo "üîß Corre√ß√£o de Autentica√ß√£o Google Cloud"
echo "========================================"

# Definir diret√≥rios
GCLOUD_CONFIG_DIR="/root/.config/gcloud"
VOLUME_CONFIG_DIR="/app/gcloud-config"
PROJECT_ID="stable-chain-455617-v1"

# Verificar se gcloud est√° instalado
if ! command -v gcloud &> /dev/null; then
    echo "‚ùå Google Cloud CLI n√£o encontrado!"
    exit 1
fi

echo "üîç Diagnosticando problema de autentica√ß√£o..."

# Verificar se existe configura√ß√£o
if [ ! -f "$VOLUME_CONFIG_DIR/application_default_credentials.json" ]; then
    echo "‚ùå Nenhuma credencial encontrada no volume persistente!"
    echo "üí° Execute primeiro: ./setup_gcloud_persistent.sh"
    exit 1
fi

echo "‚úÖ Credenciais encontradas no volume persistente"

# Restaurar configura√ß√£o do volume
echo "üìã Restaurando configura√ß√£o do volume..."
cp -r "$VOLUME_CONFIG_DIR"/* "$GCLOUD_CONFIG_DIR/" 2>/dev/null || true

# Verificar se a configura√ß√£o foi restaurada
if [ -f "$GCLOUD_CONFIG_DIR/application_default_credentials.json" ]; then
    echo "‚úÖ Configura√ß√£o restaurada"
else
    echo "‚ùå Erro ao restaurar configura√ß√£o"
    exit 1
fi

# Configurar projeto
echo "üéØ Configurando projeto $PROJECT_ID..."
gcloud config set project $PROJECT_ID

# Tentar listar projetos para verificar se a auth funciona
echo "üß™ Testando autentica√ß√£o gcloud atual..."
if gcloud projects list --limit=1 >/dev/null 2>&1; then
    echo "‚úÖ Autentica√ß√£o gcloud funcionando!"
    
    # Testar credenciais de aplica√ß√£o
    echo "üß™ Testando Application Default Credentials..."
    export GOOGLE_APPLICATION_CREDENTIALS="$GCLOUD_CONFIG_DIR/application_default_credentials.json"
    export GOOGLE_CLOUD_PROJECT="$PROJECT_ID"
    
    python test_api_working.py
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ API funcionando perfeitamente! Nenhuma corre√ß√£o necess√°ria."
        exit 0
    else
        echo "‚ö†Ô∏è Application Default Credentials precisam ser renovadas"
    fi
else
    echo "‚ö†Ô∏è Problema com autentica√ß√£o gcloud"
fi

echo "‚ö†Ô∏è Credenciais expiraram ou h√° problema de permiss√£o"
echo "üîÑ Iniciando reautentica√ß√£o..."

echo ""
echo "üìã Passos para reautentica√ß√£o:"
echo "1. Login no Google Cloud"
echo "2. Configurar credenciais padr√£o"
echo "3. Salvar no volume persistente"
echo ""

# Step 1: Login
echo "üîê Passo 1: Login no Google Cloud"
echo "IMPORTANTE: Use uma conta pessoal do Gmail se a organizacional tem restri√ß√µes"
echo ""
gcloud auth login --no-launch-browser

# Step 2: Set default credentials
echo ""
echo "üéØ Passo 2: Configurar credenciais padr√£o"
gcloud auth application-default login --no-launch-browser

# Step 3: Save to volume
echo ""
echo "üîç Passo 3: Salvando credenciais atualizadas no volume..."
if [ -f "$GCLOUD_CONFIG_DIR/application_default_credentials.json" ]; then
    # Copiar TUDO do gcloud config para o volume
    cp -r "$GCLOUD_CONFIG_DIR"/* "$VOLUME_CONFIG_DIR/" 2>/dev/null || true
    
    # Verificar se salvou
    if [ -f "$VOLUME_CONFIG_DIR/application_default_credentials.json" ]; then
        echo "‚úÖ Credenciais atualizadas salvas no volume persistente!"
        
        # Configurar vari√°veis de ambiente
        export GOOGLE_APPLICATION_CREDENTIALS="$GCLOUD_CONFIG_DIR/application_default_credentials.json"
        export GOOGLE_CLOUD_PROJECT="$PROJECT_ID"
        
    else
        echo "‚ùå Erro ao salvar no volume"
        exit 1
    fi
else
    echo "‚ö†Ô∏è Credenciais n√£o encontradas em $GCLOUD_CONFIG_DIR"
    exit 1
fi

# Step 4: Test
echo ""
echo "üß™ Passo 4: Testando configura√ß√£o atualizada..."
export GOOGLE_APPLICATION_CREDENTIALS="$GCLOUD_CONFIG_DIR/application_default_credentials.json"
export GOOGLE_CLOUD_PROJECT="$PROJECT_ID"
python test_api_working.py

echo ""
echo "‚úÖ Reautentica√ß√£o conclu√≠da!"
echo "üí° As credenciais foram atualizadas em: $VOLUME_CONFIG_DIR"
echo "üí° Agora voc√™ pode executar: python main.py" 